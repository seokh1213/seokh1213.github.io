---
// pages/index.astro
import {getCollection} from "astro:content";
import PostsLoop from "../components/posts-loop.astro";
import Layout from "../layouts/main.astro";
import FolderStructure from "@/components/folder-structure.astro";

const posts = await getCollection("post");

// 폴더 구조 변환 함수
function generateFolderStructure(posts) {
  const structure = [];

  posts.forEach((post) => {
    const {id, slug} = post;
    const parts = id.split("/");
    let currentLevel = structure;

    parts.forEach((part, index) => {
      let existing = currentLevel.find((item) => item.name === part);

      if (!existing) {
        existing = {
          name: part,
          path: index === parts.length - 1 ? `/${slug}` : null,
          post,
          children: [],
        };
        currentLevel.push(existing);
      }

      if (index < parts.length - 1) {
        currentLevel = existing.children;
      }
    });
  });

  return structure;
}

const structuredData = generateFolderStructure(posts);
console.log(structuredData)
---

<Layout title="Posts">
  <div
    class="flex flex-col lg:flex-row px-4 sm:px-6 md:px-8 max-w-screen-2xl mx-auto sm:min-h-[calc(100vh-249px)] min-h-[calc(100vh-205px)]">
    <!-- 사이드바 -->
    <aside class="hidden lg:flex flex-col basis-full lg:basis-72 grow-0 shrink-0">
      <svg
        class="w-8 h-8 dark:text-neutral-200"
        fill="none"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path d="M4 8h16M4 16h16"></path>
      </svg>
      <div data-testid="toc-scroll-container" class="flex flex-grow flex-col p-2 lg:pb-20 overflow-y-auto">
        <FolderStructure items={structuredData}/>
      </div>
    </aside>

    <!-- 메인 콘텐츠 -->
    <main class="flex-1 flex flex-col">
      <PostsLoop count="999999999"/>
    </main>

    <section class="relative z-20 max-w-2xl mx-auto my-12 px-7 lg:px-0"></section>
  </div>
</Layout>