---
import {getCollection} from "astro:content";
import PostsLoop from "../components/posts-loop.astro";
import Layout from "../layouts/main.astro";

const allBlogPosts = await getCollection("post");

// 📌 폴더 구조 변환 함수
function generateFolderStructure(posts) {
  const structure = [];

  posts.forEach(({id, slug}) => {
    const parts = id.split("/");
    let currentLevel = structure;

    parts.forEach((part, index) => {
      let existing = currentLevel.find((item) => item.name === part);

      if (!existing) {
        existing = {
          name: part,
          path: index === parts.length - 1 ? `/${slug}` : null,
          children: [],
        };
        currentLevel.push(existing);
      }

      if (index < parts.length - 1) {
        currentLevel = existing.children;
      }
    });
  });

  return structure;
}

// 📌 HTML 리스트 생성 함수 (폴딩 지원)
function generateList(items) {
  if (!items || items.length === 0) return "";

  return `
    <ul class="flex flex-col gap-y-0.5 sidebar-list-line:border-l border-dark/3 dark:border-light/2">
      ${items
    .map(
      (item) => `
          <li class="flex flex-col">
            ${
        item.children.length > 0
          ? `<details class="group">
                    <summary class="flex items-center gap-3 px-3 cursor-pointer">
                      ${item.name}
                      <svg class="w-4 h-4 transition-transform group-open:rotate-90" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M9 18l6-6-6-6"></path>
                      </svg>
                    </summary>
                    <div class="ml-5">${generateList(item.children)}</div>
                  </details>`
          : `<a href="${item.path}" class="pl-3 text-sm text-dark/8 hover:text-dark/9 hover:bg-dark/1 dark:text-light/8 dark:hover:text-light/9 dark:hover:bg-light/1">${item.name}</a>`
      }
          </li>
        `
    )
    .join("")}
    </ul>
  `;
}

// 📌 변환된 목차 데이터
const structuredData = generateFolderStructure(allBlogPosts);
---

<Layout title="Posts">
  <div
    class="flex flex-col lg:flex-row px-4 sm:px-6 md:px-8 max-w-screen-2xl mx-auto sm:min-h-[calc(100vh-249px)] min-h-[calc(100vh-205px)]">
    <!-- 사이드바 -->
    <aside class="hidden lg:flex flex-col basis-full lg:basis-72 grow-0 shrink-0">
      <svg class="w-8 h-8 dark:text-neutral-200" fill="none" stroke-linecap="round" stroke-linejoin="round"
           stroke-width="2" viewBox="0 0 24 24" stroke="currentColor">
        <path d="M4 8h16M4 16h16"></path>
      </svg>
      <div data-testid="toc-scroll-container" class="flex flex-grow flex-col p-2 lg:pb-20 overflow-y-auto">
        <div set:html={generateList(structuredData)}></div>
      </div>
    </aside>

    <!-- 메인 콘텐츠 -->
    <main class="flex-1 flex flex-col">
      <PostsLoop count="999999999"/>
    </main>

    <section class="relative z-20 max-w-2xl mx-auto my-12 px-7 lg:px-0"></section>
  </div>
</Layout>
